from sklearn.model_selection import train_test_split
from sklearn.feature_extraction.text import CountVectorizer
from sklearn.linear_model import LogisticRegression

titulos_emails = [
    "ReuniÃ£o amanhÃ£", "VocÃª Ã© o vencedor!", "AtualizaÃ§Ã£o de senha necessÃ¡ria", 
    "Convite para o evento", "Ganhe um iPhone novo!", "ConfirmaÃ§Ã£o de compra", 
    "Seu boleto estÃ¡ disponÃ­vel", "VocÃª ganhou na loteria!", "Vaga de emprego disponÃ­vel", 
    "AtualizaÃ§Ã£o de polÃ­tica de privacidade", "VocÃª foi selecionado!", "Sua opiniÃ£o Ã© importante", 
    "Novo curso disponÃ­vel", "VocÃª ganhou um desconto!", "ConfirmaÃ§Ã£o de reserva", 
    "Seu prÃªmio estÃ¡ esperando", "Boletim informativo", "Ganhe dinheiro rÃ¡pido!", 
    "AtualizaÃ§Ã£o de seguranÃ§a necessÃ¡ria", "ConfirmaÃ§Ã£o de pagamento", "VocÃª Ã© nosso milionÃ©simo visitante!", 
    "Lembrete de aniversÃ¡rio", "Aproveite nossa oferta especial!", "Sua fatura estÃ¡ vencida", 
    "Novidades da semana", "VocÃª ganhou um prÃªmio!", "Re: ReuniÃ£o de segunda-feira", 
    "Seja nosso parceiro", "VocÃª ganhou um carro novo!", "ConfirmaÃ§Ã£o de inscriÃ§Ã£o", 
    "AtualizaÃ§Ã£o de termos de serviÃ§o", "VocÃª ganhou uma viagem!", "Lembrete de evento", 
    "Oferta por tempo limitado", "VocÃª Ã© o sortudo do dia!", "Re: Aula de amanhÃ£", 
    "Novo produto disponÃ­vel", "VocÃª ganhou um vale-presente!", "ConfirmaÃ§Ã£o de envio", 
    "Novo artigo no blog", "VocÃª ganhou um cruzeiro!", "Re: Jantar de sexta-feira", 
    "PromoÃ§Ã£o de fim de semana", "VocÃª ganhou um sorteio!", "ConfirmaÃ§Ã£o de cancelamento", 
    "AtualizaÃ§Ã£o de produto", "VocÃª ganhou um iPad!", "Re: Encontro de sÃ¡bado", 
    "Desconto exclusivo para vocÃª", "VocÃª ganhou um jackpot!", "ConfirmaÃ§Ã£o de alteraÃ§Ã£o de senha", 
    "Novo recurso disponÃ­vel", "VocÃª ganhou um cartÃ£o-presente!", "Re: AlmoÃ§o de domingo"
]
classificacao = [0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0]


# Transformando os tÃ­tulos dos e-mails em caracterÃ­sticas numÃ©ricas
vetorizador = CountVectorizer()
caracteristicas = vetorizador.fit_transform(titulos_emails)

# Dividindo os dados em conjuntos de treinamento e teste
caracteristicas_treino, caracteristicas_teste, classificacao_treino, classificacao_teste = train_test_split(
    caracteristicas, classificacao, test_size=0.2, random_state=42)

# Treinando o modelo de RegressÃ£o LogÃ­stica
modelo = LogisticRegression()
modelo.fit(caracteristicas_treino, classificacao_treino)

# Testando o modelo
print("AcurÃ¡cia do modelo: ", modelo.score(caracteristicas_teste, classificacao_teste))

# Prevendo se um novo e-mail Ã© spam ou nÃ£o
novo_email = vetorizador.transform(["Um benefÃ­cio exclusivo para um aluno como vocÃª!ğŸ˜€"])
predicao = modelo.predict(novo_email)

if predicao[0] == 0:
    print("O e-mail nÃ£o Ã© spam.")
else:
    print("O e-mail Ã© spam.")
